---
apiVersion: v1
kind: Service
metadata:
  name: trolley-management-api
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
      nodePort: 30000
  selector:
    app: trolley-management
    tier: compute
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trolley-management-api
spec:
  selector:
    matchLabels:
      app: trolley-management
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: trolley-management
        tier: compute
    spec:
      containers:
        - image: DOCKERHUB_USERNAME/DOCKERHUB_REPOSITORY:IMAGE_LABEL
          imagePullPolicy: Always
          name: trolley-management-api
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: trolley-management-api-config
          env:
            - name: MYSQL_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: trolley-management-api-config
                  key: DATABASE_USERNAME
            - name: MYSQL_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: trolley-management-api-config
                  key: DATABASE_PASSWORD
            - name: MYSQL_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: trolley-management-api-config
                  key: DATABASE_HOSTNAME
            - name: MYSQL_DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: trolley-management-api-config
                  key: DATABASE_PORT
          ports:
            - containerPort: 8080

---
# database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: trolley-management
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: trolley-management
    spec:
      containers:
      - image: mariadb
        name: mysql
        resources:
          requests:
              memory: "64Mi"
              cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "500m"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: trolley-management-api-config
              key: DATABASE_PASSWORD
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS alerts;

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 30001
  selector:
    app: trolley-management

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/mysql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# phpmyadmin
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: trolley-management
  name: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trolley-management
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: trolley-management
    spec:
      containers:
        - env:
            - name: UPLOAD_LIMIT
              value: 300M
          image: phpmyadmin/phpmyadmin:latest
          name: phpmyadmin
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /etc/phpmyadmin/config.user.inc.php
              name: phpmyadmin-volume
      restartPolicy: Always
      volumes:
        - name: phpmyadmin-volume
          persistentVolumeClaim:
            claimName: phpmyadmin-volume
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: phpmyadmin
  name: phpmyadmin
spec:
  type: NodePort
  ports:
    - name: "82"
      port: 82
      targetPort: 82
  selector:
    app: phpmyadmin
status:
  loadBalancer: {}


---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: phpmyadmin-volume
  name: phpmyadmin-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}